@page "/pages"
@model IndexModel

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>

<script>
// Prevent dropdown menu from closing when click inside the form
$(document).on("click", ".action-buttons .dropdown-menu", function(e){
	e.stopPropagation();
});
</script>

<h4>class="bg-primary text-white text-center p-2">People</h4>

<table class="table table-sm table-bordered table-striped">
    <thead>
        <tr>
            <th>ID</th><th>Name</th><th>Dept</th><th>Location</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Person p in Model.People)
        {
            <tr class="@Model.GetClass(p.Location?.City)">
                <td>@p.PersonId</td>
                <td>@p.LastName,@p.FirstName</td>
                <td>@p.Department?.Name</td>
                <td>@p.Location?.City,@p.Location?.State</td>
            </tr>
        }
    </tbody>
</table>

<form asp-page="Index" method="get">
    <div class="form-group">
        <lable for="selectedCity">City</lable>
        <select name="selectedCity" class="form-control">
            <option disabled selected>Select City</option>
            @foreach(string city in Model.Cities)
            {
                <option selected="@(city == Model.SelectedCity)">
                    @city
                </option>
            }
        </select>
    </div>
    <button class="btn btn-primary mt-2" type="submit">Select</button>
</form>

@functions{
    public class IndexModel : PageModel
    {
        private EmpManagerDbContext context;

        public IndexModel(EmpManagerDbContext dbcontext)
        {
            context = dbcontext;
        }
        public IEnumerable<Person> People { get; set; } = Enumerable.Empty<Person>();
        public IEnumerable<string> Cities { get; set; } = Enumerable.Empty<string>();

        [FromQuery]
        public string SelectedCity { get; set; } = string.Empty;

        public void OnGet()
        {
            People = context.People.Include(p => p.Department).Include(p => p.Location);
            Cities = context.Locations.Select(l => l.City).Distinct();
        }

        public string GetClass(string? city) => SelectedCity == city ? "bg-info text-white" : "";
    }
}
